name: build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  GCC_VERSION: 13

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install compiler and stdlib
        run: |
          sudo apt-get install --no-install-recommends -y gcc-$GCC_VERSION g++-$GCC_VERSION cpp-$GCC_VERSION libstdc++-$GCC_VERSION-dev cmake python3 python3-venv valgrind

          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-$GCC_VERSION 800
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-$GCC_VERSION 800
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-$GCC_VERSION 800
          sudo update-alternatives --install /usr/bin/cc  cc  /usr/bin/gcc-$GCC_VERSION 800

          python3 -m venv .venv && . .venv/bin/activate && pip install "conan<2.0"

      - name: Setup conan
        run: . .venv/bin/activate && etc/conan-config.sh gcc $GCC_VERSION
  
      - name: Cache/Restore dependencies
        uses: actions/cache@v4
        with:
            path: ~/.conan
            key: ${{ runner.os }}-${{ github.workflow }}-conanfile-${{ hashFiles('conanfile.py') }}
  
      - name: Install dependencies
        run: . .venv/bin/activate && etc/conan-install.sh Release
  
      - name: Build
        run: |
          etc/cmake-config.sh Release
          etc/cmake-build.sh Release -- -j

      - name: Run gunit tests
        run: build/Release/bin/vrdlib.test

      - name: Run valgrind memory check
        run: |
          valgrind \
            --leak-check=full \
            --show-reachable=yes \
            --track-origins=yes \
            --xml=yes --xml-file=valgrind.result.xml \
            build/Release/bin/vrdlib.test

      - name: Create Debian package
        working-directory: build/Release
        run: cpack --config CPackConfig.cmake

      - name: Archive Debian package
        uses: actions/upload-artifact@v4
        with:
          name: vrdextractor.deb
          path: |
            build/Release/*.deb

      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: test-and-memory-check-results
          path: |
            *.result.xml
